# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on merge
'on':
  push:
    branches:
      - main
  repository_dispatch:
    types:
      - webhook
jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: üîê Create .env
        uses: SpicyPizza/create-envfile@v1
        with:
          envkey_GATSBY_SOURCE_DATOCMS_API_TOKEN: ${{ secrets.GATSBY_SOURCE_DATOCMS_API_TOKEN }}
          envkey_GATSBY_GEOVELO_AUTHORIZATION: ${{ secrets.GATSBY_GEOVELO_AUTHORIZATION }}
          envkey_GATSBY_GEOVELO_API_KEY: ${{ secrets.GATSBY_GEOVELO_API_KEY }}
          envkey_GATSBY_GATSBY_GEOVELO_SOURCE: ${{ secrets.GATSBY_GEOVELO_SOURCE }}
          envkey_GATSBY_FIREBASE_API_KEY: ${{ secrets.GATSBY_FIREBASE_API_KEY }}
          envkey_GATSBY_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.GATSBY_FIREBASE_MESSAGING_SENDER_ID }}
          envkey_GATSBY_FIREBASE_APP_ID: ${{ secrets.GATSBY_FIREBASE_APP_ID }}
          envkey_GATSBY_FIREBASE_MEASUREMENT_ID: ${{ secrets.GATSBY_FIREBASE_MEASUREMENT_ID }}
          file_name: .env
      - name: üì¶ Install dependencies and build
        run: yarn install --frozen-lockfile && yarn build
      - name: üöÄ Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_ASSO_VELOTAFONS }}'
          channelId: live
          projectId: asso-velotafons
  notify_success:
    runs-on: ubuntu-latest
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
    needs: [build_and_deploy]
    steps:
      - name: ‚úÖ Notify successful build and deploy to DatoCMS
        if: ${{ always() && !cancelled() && contains(needs.*.result, 'success') }}
        run: |
          curl -n -X POST https://webhooks.datocms.com/8SQciQT8SI/deploy-results -H 'Content-Type: application/json' -d '{ "status": "success" }'
  notify_failure:
    runs-on: ubuntu-latest
    if: ${{ always() && contains(needs.*.result, 'failure') }}
    needs: [build_and_deploy]
    steps:
      - name: ‚ùå Notify failed build or deploy to DatoCMS
        if: ${{ always() && !cancelled() && contains(needs.*.result, 'failure') }}
        run: |
          curl -n -X POST https://webhooks.datocms.com/8SQciQT8SI/deploy-results -H 'Content-Type: application/json' -d '{ "status": "error" }'

